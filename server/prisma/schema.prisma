generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   authorId  Int
//   author    User     @relation(fields: [authorId], references: [id])
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   userId Int     @unique
//   user   User    @relation(fields: [userId], references: [id])
// }

model TypeNote {
  id      Int      @id @default(autoincrement())
  name    String
  notes   Ticket[]
}

model Ticket {
  id      Int      @id @default(autoincrement())
  title   String
  content String
  priority Int
  status Int? @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  typeNoteId Int
  typeNote TypeNote @relation(fields: [typeNoteId], references: [id])
  authorId Int
  author  User    @relation(fields: [authorId], references: [id])
  affectedUserId Int
  affectedUser User @relation("AffectedUser", fields: [affectedUserId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  password String
  name    String?
  author   Ticket[]
  affectedNotes Ticket[] @relation("AffectedUser")
  tokens  String  @default("")
}

